name: Docker Build & Push to GHCR

on:
  push:
    branches:
      - master
      - main
      - dev
  pull_request:
    branches:
      - master
      - main

env:
  REGISTRY: ghcr.io

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ github.event.repository.name }}
          tags: |
            type=raw,value=prod-latest,enable={{is_default_branch}}
            type=raw,value=prod-{{sha}},enable={{is_default_branch}}
            type=raw,value=staging-latest,enable=${{ github.ref_name == 'main' && github.ref_name != github.event.repository.default_branch }}
            type=raw,value=staging-{{sha}},enable=${{ github.ref_name == 'main' && github.ref_name != github.event.repository.default_branch }}
            type=raw,value=dev-latest,enable=${{ github.ref_name == 'dev' }}
            type=raw,value=dev-{{sha}},enable=${{ github.ref_name == 'dev' }}
            type=ref,event=pr,prefix=pr-
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created={{date 'YYYY-MM-DDTHH:mm:ssZ'}}
            org.opencontainers.image.revision={{sha}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Quick security check (Dockerfile lint)
        if: github.event_name != 'pull_request'
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          format: tty
          no-fail: true

      - name: Build summary
        if: always()
        run: |
          echo "## 🐳 Docker Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tags**: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY